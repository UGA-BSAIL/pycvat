# coding: utf-8

"""
    CVAT REST API

    REST API for Computer Vision Annotation Tool (CVAT)  # noqa: E501

    OpenAPI spec version: v1
    Contact: nikita.manovich@intel.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.tasks_api import TasksApi  # noqa: E501
from swagger_client.rest import ApiException


class TestTasksApi(unittest.TestCase):
    """TasksApi unit test stubs"""

    def setUp(self):
        self.api = TasksApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_tasks_annotations_delete(self):
        """Test case for tasks_annotations_delete

        Method deletes all annotations for a specific task  # noqa: E501
        """
        pass

    def test_tasks_annotations_partial_update(self):
        """Test case for tasks_annotations_partial_update

        Method performs a partial update of annotations in a specific task  # noqa: E501
        """
        pass

    def test_tasks_annotations_read(self):
        """Test case for tasks_annotations_read

        Method allows to download task annotations  # noqa: E501
        """
        pass

    def test_tasks_annotations_update(self):
        """Test case for tasks_annotations_update

        Method allows to upload task annotations  # noqa: E501
        """
        pass

    def test_tasks_create(self):
        """Test case for tasks_create

        Method creates a new task in a database without any attached images and videos  # noqa: E501
        """
        pass

    def test_tasks_data_create(self):
        """Test case for tasks_data_create

        Method permanently attaches images or video to a task  # noqa: E501
        """
        pass

    def test_tasks_data_data_info(self):
        """Test case for tasks_data_data_info

        Method provides a meta information about media files which are related with the task  # noqa: E501
        """
        pass

    def test_tasks_data_read(self):
        """Test case for tasks_data_read

        Method returns data for a specific task  # noqa: E501
        """
        pass

    def test_tasks_dataset_export(self):
        """Test case for tasks_dataset_export

        Export task as a dataset in a specific format  # noqa: E501
        """
        pass

    def test_tasks_delete(self):
        """Test case for tasks_delete

        Method deletes a specific task, all attached jobs, annotations, and data  # noqa: E501
        """
        pass

    def test_tasks_jobs(self):
        """Test case for tasks_jobs

        Returns a list of jobs for a specific task  # noqa: E501
        """
        pass

    def test_tasks_list(self):
        """Test case for tasks_list

        Returns a paginated list of tasks according to query parameters (10 tasks per page)  # noqa: E501
        """
        pass

    def test_tasks_partial_update(self):
        """Test case for tasks_partial_update

        Methods does a partial update of chosen fields in a task  # noqa: E501
        """
        pass

    def test_tasks_read(self):
        """Test case for tasks_read

        Method returns details of a specific task  # noqa: E501
        """
        pass

    def test_tasks_status(self):
        """Test case for tasks_status

        When task is being created the method returns information about a status of the creation process  # noqa: E501
        """
        pass

    def test_tasks_update(self):
        """Test case for tasks_update

        Method updates a task by id  # noqa: E501
        """
        pass


if __name__ == "__main__":
    unittest.main()
