{"swagger": "2.0", "info": {"title": "CVAT REST API", "description": "REST API for Computer Vision Annotation Tool (CVAT)", "termsOfService": "https://www.google.com/policies/terms/", "contact": {"email": "nikita.manovich@intel.com"}, "license": {"name": "MIT License"}, "version": "v1"}, "host": "bsailn1.engr.uga.edu", "schemes": ["http"], "basePath": "/api/v1", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/auth/login": {"post": {"operationId": "auth_login_create", "description": "Check the credentials and return the REST Token\nif the credentials are valid and authenticated.\nCalls Django Auth login method to register User ID\nin Django session framework\n\nAccept the following POST parameters: username, password\nReturn the REST Framework Token Object's key.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Login"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Login"}}}, "tags": ["auth"]}, "parameters": []}, "/auth/logout": {"get": {"operationId": "auth_logout_list", "summary": "Calls Django logout method and delete the Token object\nassigned to the current User object.", "description": "Accepts/Returns nothing.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["auth"]}, "post": {"operationId": "auth_logout_create", "summary": "Calls Django logout method and delete the Token object\nassigned to the current User object.", "description": "Accepts/Returns nothing.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["auth"]}, "parameters": []}, "/auth/password/change": {"post": {"operationId": "auth_password_change_create", "summary": "Calls Django Auth SetPasswordForm save method.", "description": "Accepts the following POST parameters: new_password1, new_password2\nReturns the success/fail message.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PasswordChange"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PasswordChange"}}}, "tags": ["auth"]}, "parameters": []}, "/auth/password/reset": {"post": {"operationId": "auth_password_reset_create", "summary": "Calls Django Auth PasswordResetForm save method.", "description": "Accepts the following POST parameters: email\nReturns the success/fail message.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PasswordResetSerializerEx"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PasswordResetSerializerEx"}}}, "tags": ["auth"]}, "parameters": []}, "/auth/password/reset/confirm": {"post": {"operationId": "auth_password_reset_confirm_create", "summary": "Password reset e-mail link is confirmed, therefore\nthis resets the user's password.", "description": "Accepts the following POST parameters: token, uid,\n    new_password1, new_password2\nReturns the success/fail message.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PasswordResetConfirm"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PasswordResetConfirm"}}}, "tags": ["auth"]}, "parameters": []}, "/auth/register": {"post": {"operationId": "auth_register_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RestrictedRegister"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/RestrictedRegister"}}}, "tags": ["auth"]}, "parameters": []}, "/auth/signing": {"post": {"operationId": "auth_signing_create", "summary": "This method signs URL for access to the server.", "description": "Signed URL contains a token which authenticates a user on the server.\nSigned URL is valid during 30 seconds since signing.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["url"], "type": "object", "properties": {"url": {"type": "string"}}}}], "responses": {"200": {"description": "text URL"}}, "tags": ["auth"]}, "parameters": []}, "/cloudstorages": {"get": {"operationId": "cloudstorages_list", "summary": "Returns a paginated list of storages according to query parameters", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "id", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "display_name", "in": "query", "description": "A display name of storage", "type": "string"}, {"name": "provider_type", "in": "query", "description": "A supported provider of cloud storages", "type": "string", "enum": ["AWS_S3_BUCKET", "AZURE_CONTAINER", "GOOGLE_DRIVE", "GOOGLE_CLOUD_STORAGE"]}, {"name": "resource", "in": "query", "description": "A name of bucket or container", "type": "string"}, {"name": "credentials_type", "in": "query", "description": "A type of a granting access", "type": "string", "enum": ["KEY_SECRET_KEY_PAIR", "ACCOUNT_NAME_TOKEN_PAIR", "KEY_FILE_PATH", "ANONYMOUS_ACCESS"]}, {"name": "description", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "owner", "in": "query", "description": "A resource owner", "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/BaseCloudStorage"}}}}, "tags": ["cloud storages"]}, "post": {"operationId": "cloudstorages_create", "summary": "Method creates a cloud storage with a specified characteristics", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CloudStorage"}}], "responses": {"201": {"description": "A storage has beed created"}}, "tags": ["cloud storages"]}, "parameters": []}, "/cloudstorages/{id}": {"get": {"operationId": "cloudstorages_read", "summary": "Method returns details of a specific cloud storage", "description": "", "parameters": [], "responses": {"200": {"description": "A details of a storage"}}, "tags": ["cloud storages"]}, "patch": {"operationId": "cloudstorages_partial_update", "summary": "Methods does a partial update of chosen fields in a cloud storage instance", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CloudStorage"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CloudStorage"}}}, "tags": ["cloud storages"]}, "delete": {"operationId": "cloudstorages_delete", "summary": "Method deletes a specific cloud storage", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["cloud storages"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this cloud storage.", "required": true, "type": "integer"}]}, "/cloudstorages/{id}/content": {"get": {"operationId": "cloudstorages_content", "summary": "Method returns a manifest content", "description": "", "parameters": [{"name": "manifest_path", "in": "query", "description": "Path to the manifest file in a cloud storage", "type": "string"}], "responses": {"200": {"description": "A manifest content"}}, "tags": ["cloud storages"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this cloud storage.", "required": true, "type": "integer"}]}, "/cloudstorages/{id}/preview": {"get": {"operationId": "cloudstorages_preview", "summary": "Method returns a preview image from a cloud storage", "description": "", "parameters": [], "responses": {"200": {"description": "Preview"}}, "tags": ["cloud storages"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this cloud storage.", "required": true, "type": "integer"}]}, "/cloudstorages/{id}/status": {"get": {"operationId": "cloudstorages_status", "summary": "Method returns a cloud storage status", "description": "", "parameters": [], "responses": {"200": {"description": "Status"}}, "tags": ["cloud storages"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this cloud storage.", "required": true, "type": "integer"}]}, "/comments": {"post": {"operationId": "comments_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Comment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Comment"}}}, "tags": ["comments"]}, "parameters": []}, "/comments/{id}": {"patch": {"operationId": "comments_partial_update", "summary": "Method updates comment in an issue", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Comment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Comment"}}}, "tags": ["comments"]}, "delete": {"operationId": "comments_delete", "summary": "Method removes a comment from an issue", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["comments"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this comment.", "required": true, "type": "integer"}]}, "/issues/{id}": {"patch": {"operationId": "issues_partial_update", "summary": "Method updates an issue. It is used to resolve/reopen an issue", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Issue"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Issue"}}}, "tags": ["issues"]}, "delete": {"operationId": "issues_delete", "summary": "Method removes an issue from a job", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["issues"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this issue.", "required": true, "type": "integer"}]}, "/issues/{id}/comments": {"get": {"operationId": "issues_comments", "summary": "The action returns all comments of a specific issue", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Comment"}}}}, "tags": ["issues"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this issue.", "required": true, "type": "integer"}]}, "/jobs/{id}": {"get": {"operationId": "jobs_read", "summary": "Method returns details of a job", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Job"}}}, "tags": ["jobs"]}, "put": {"operationId": "jobs_update", "summary": "Method updates a job by id", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Job"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Job"}}}, "tags": ["jobs"]}, "patch": {"operationId": "jobs_partial_update", "summary": "Methods does a partial update of chosen fields in a job", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Job"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Job"}}}, "tags": ["jobs"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this job.", "required": true, "type": "integer"}]}, "/jobs/{id}/annotations": {"get": {"operationId": "jobs_annotations_read", "summary": "Method returns annotations for a specific job", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/LabeledData"}}}, "tags": ["jobs"]}, "put": {"operationId": "jobs_annotations_update", "summary": "Method performs an update of all annotations in a specific job", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/LabeledData"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/LabeledData"}}}, "tags": ["jobs"]}, "patch": {"operationId": "jobs_annotations_partial_update", "summary": "Method performs a partial update of annotations in a specific job", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/LabeledData"}}, {"name": "action", "in": "query", "required": true, "type": "string", "enum": ["create", "update", "delete"]}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/LabeledData"}}}, "tags": ["jobs"]}, "delete": {"operationId": "jobs_annotations_delete", "summary": "Method deletes all annotations for a specific job", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["jobs"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this job.", "required": true, "type": "integer"}]}, "/jobs/{id}/issues": {"get": {"operationId": "jobs_issues", "summary": "Method returns list of issues for the job", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/CombinedIssue"}}}}, "tags": ["jobs"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this job.", "required": true, "type": "integer"}]}, "/jobs/{id}/reviews": {"get": {"operationId": "jobs_reviews", "summary": "Method returns list of reviews for the job", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Review"}}}}, "tags": ["jobs"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this job.", "required": true, "type": "integer"}]}, "/lambda/functions": {"get": {"operationId": "lambda_functions_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["lambda"]}, "parameters": []}, "/lambda/functions/{func_id}": {"get": {"operationId": "lambda_functions_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["lambda"]}, "post": {"operationId": "lambda_functions_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["lambda"]}, "parameters": [{"name": "func_id", "in": "path", "required": true, "type": "string", "pattern": "[a-zA-Z0-9_.-]+"}]}, "/lambda/requests": {"get": {"operationId": "lambda_requests_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["lambda"]}, "post": {"operationId": "lambda_requests_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["lambda"]}, "parameters": []}, "/lambda/requests/{id}": {"get": {"operationId": "lambda_requests_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["lambda"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/predict/frame": {"get": {"operationId": "predict_predict_image", "summary": "Returns prediction for image", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["predict"]}, "parameters": []}, "/predict/status": {"get": {"operationId": "predict_predict_status", "summary": "Returns information of the tasks of the project with the selected id", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["predict"]}, "parameters": []}, "/projects": {"get": {"operationId": "projects_list", "summary": "Returns a paginated list of projects according to query parameters (12 projects per page)", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "id", "in": "query", "description": "A unique number value identifying this project", "type": "number"}, {"name": "name", "in": "query", "description": "Find all projects where name contains a parameter value", "type": "string"}, {"name": "owner", "in": "query", "description": "Find all project where owner name contains a parameter value", "type": "string"}, {"name": "status", "in": "query", "description": "Find all projects with a specific status", "type": "string", "enum": ["annotation", "validation", "completed"]}, {"name": "assignee", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "names_only", "in": "query", "description": "Returns only names and id's of projects.", "type": "boolean"}, {"name": "without_tasks", "in": "query", "description": "Returns only projects entities without related tasks", "type": "boolean"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Project"}}}}}}, "tags": ["projects"]}, "post": {"operationId": "projects_create", "summary": "Method creates a new project", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Project"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["projects"]}, "parameters": []}, "/projects/{id}": {"get": {"operationId": "projects_read", "summary": "Method returns details of a specific project", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["projects"]}, "patch": {"operationId": "projects_partial_update", "summary": "Methods does a partial update of chosen fields in a project", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Project"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["projects"]}, "delete": {"operationId": "projects_delete", "summary": "Method deletes a specific project", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["projects"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/projects/{id}/annotations": {"get": {"operationId": "projects_annotations", "summary": "Method allows to download project annotations", "description": "", "parameters": [{"name": "format", "in": "query", "description": "Desired output format name\nYou can get the list of supported formats at:\n/server/annotation/formats", "required": true, "type": "string"}, {"name": "filename", "in": "query", "description": "Desired output file name", "required": false, "type": "string"}, {"name": "action", "in": "query", "description": "Used to start downloading process after annotation file had been created", "required": false, "type": "string", "enum": ["download"]}], "responses": {"202": {"description": "Dump of annotations has been started"}, "201": {"description": "Annotations file is ready to download"}, "200": {"description": "Download of file started"}, "405": {"description": "Format is not available"}, "401": {"description": "Format is not specified"}}, "tags": ["projects"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/projects/{id}/dataset": {"get": {"operationId": "projects_dataset_export", "summary": "Export project as a dataset in a specific format", "description": "", "parameters": [{"name": "format", "in": "query", "description": "Desired output format name\nYou can get the list of supported formats at:\n/server/annotation/formats", "required": true, "type": "string"}, {"name": "filename", "in": "query", "description": "Desired output file name", "required": false, "type": "string"}, {"name": "action", "in": "query", "description": "Used to start downloading process after annotation file had been created", "required": false, "type": "string", "enum": ["download"]}], "responses": {"202": {"description": "Exporting has been started"}, "201": {"description": "Output file is ready for downloading"}, "200": {"description": "Download of file started"}, "405": {"description": "Format is not available"}}, "tags": ["projects"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/projects/{id}/tasks": {"get": {"operationId": "projects_tasks", "summary": "Returns information of the tasks of the project with the selected id", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Task"}}}}, "tags": ["projects"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/restrictions/terms-of-use": {"get": {"operationId": "restrictions_terms_of_use", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "produces": [], "tags": ["restrictions"]}, "parameters": []}, "/restrictions/user-agreements": {"get": {"operationId": "restrictions_user_agreements", "summary": "Method provides user agreements that the user must accept to register", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserAgreement"}}}, "tags": ["restrictions"]}, "parameters": []}, "/reviews": {"post": {"operationId": "reviews_create", "summary": "Submit a review for a job", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CombinedReview"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CombinedReview"}}}, "tags": ["reviews"]}, "parameters": []}, "/reviews/{id}": {"delete": {"operationId": "reviews_delete", "summary": "Method removes a review from a job", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["reviews"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this review.", "required": true, "type": "integer"}]}, "/server/about": {"get": {"operationId": "server_about", "summary": "Method provides basic CVAT information", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/About"}}}, "tags": ["server"]}, "parameters": []}, "/server/annotation/formats": {"get": {"operationId": "server_annotation_annotation_formats", "summary": "Method provides the list of supported annotations formats", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DatasetFormats"}}}, "tags": ["server"]}, "parameters": []}, "/server/exception": {"post": {"operationId": "server_exception", "summary": "Saves an exception from a client on the server", "description": "Sends logs to the ELK if it is connected", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Exception"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Exception"}}}, "tags": ["server"]}, "parameters": []}, "/server/logs": {"post": {"operationId": "server_logs", "summary": "Saves logs from a client on the server", "description": "Sends logs to the ELK if it is connected", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/LogEvent"}}}], "responses": {"201": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/LogEvent"}}}}, "tags": ["server"]}, "parameters": []}, "/server/plugins": {"get": {"operationId": "server_plugins", "summary": "Method provides allowed plugins.", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Plugins"}}}, "tags": ["server"]}, "parameters": []}, "/server/share": {"get": {"operationId": "server_share", "summary": "Returns all files and folders that are on the server along specified path", "description": "", "parameters": [{"name": "directory", "in": "query", "description": "Directory to browse", "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/FileInfo"}}}}, "tags": ["server"]}, "parameters": []}, "/tasks": {"get": {"operationId": "tasks_list", "summary": "Returns a paginated list of tasks according to query parameters (10 tasks per page)", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "id", "in": "query", "description": "A unique number value identifying this task", "type": "number"}, {"name": "name", "in": "query", "description": "Find all tasks where name contains a parameter value", "type": "string"}, {"name": "owner", "in": "query", "description": "Find all tasks where owner name contains a parameter value", "type": "string"}, {"name": "mode", "in": "query", "description": "Find all tasks with a specific mode", "type": "string", "enum": ["annotation", "interpolation"]}, {"name": "status", "in": "query", "description": "Find all tasks with a specific status", "type": "string", "enum": ["annotation", "validation", "completed"]}, {"name": "assignee", "in": "query", "description": "Find all tasks where assignee name contains a parameter value", "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Task"}}}}}}, "tags": ["tasks"]}, "post": {"operationId": "tasks_create", "summary": "Method creates a new task in a database without any attached images and videos", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Task"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Task"}}}, "tags": ["tasks"]}, "parameters": []}, "/tasks/{id}": {"get": {"operationId": "tasks_read", "summary": "Method returns details of a specific task", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Task"}}}, "tags": ["tasks"]}, "put": {"operationId": "tasks_update", "summary": "Method updates a task by id", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Task"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Task"}}}, "tags": ["tasks"]}, "patch": {"operationId": "tasks_partial_update", "summary": "Methods does a partial update of chosen fields in a task", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Task"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Task"}}}, "tags": ["tasks"]}, "delete": {"operationId": "tasks_delete", "summary": "Method deletes a specific task, all attached jobs, annotations, and data", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["tasks"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this task.", "required": true, "type": "integer"}]}, "/tasks/{id}/annotations": {"get": {"operationId": "tasks_annotations_read", "summary": "Method allows to download task annotations", "description": "", "parameters": [{"name": "format", "in": "query", "description": "Desired output format name\nYou can get the list of supported formats at:\n/server/annotation/formats", "required": false, "type": "string"}, {"name": "filename", "in": "query", "description": "Desired output file name", "required": false, "type": "string"}, {"name": "action", "in": "query", "description": "Used to start downloading process after annotation file had been created", "required": false, "type": "string", "enum": ["download"]}], "responses": {"202": {"description": "Dump of annotations has been started"}, "201": {"description": "Annotations file is ready to download"}, "200": {"description": "Download of file started"}, "405": {"description": "Format is not available"}}, "tags": ["tasks"]}, "put": {"operationId": "tasks_annotations_update", "summary": "Method allows to upload task annotations", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/LabeledData"}}, {"name": "format", "in": "query", "description": "Input format name\nYou can get the list of supported formats at:\n/server/annotation/formats", "required": false, "type": "string"}], "responses": {"202": {"description": "Uploading has been started"}, "201": {"description": "Uploading has finished"}, "405": {"description": "Format is not available"}}, "tags": ["tasks"]}, "patch": {"operationId": "tasks_annotations_partial_update", "summary": "Method performs a partial update of annotations in a specific task", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/LabeledData"}}, {"name": "action", "in": "query", "required": true, "type": "string", "enum": ["create", "update", "delete"]}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/LabeledData"}}}, "tags": ["tasks"]}, "delete": {"operationId": "tasks_annotations_delete", "summary": "Method deletes all annotations for a specific task", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["tasks"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this task.", "required": true, "type": "integer"}]}, "/tasks/{id}/data": {"get": {"operationId": "tasks_data_read", "summary": "Method returns data for a specific task", "description": "", "parameters": [{"name": "type", "in": "query", "description": "Specifies the type of the requested data", "required": true, "type": "string", "enum": ["chunk", "frame", "preview", "context_image"]}, {"name": "quality", "in": "query", "description": "Specifies the quality level of the requested data, doesn't matter for 'preview' type", "required": true, "type": "string", "enum": ["compressed", "original"]}, {"name": "number", "in": "query", "description": "A unique number value identifying chunk or frame, doesn't matter for 'preview' type", "required": true, "type": "number"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Task"}}}, "tags": ["tasks"]}, "post": {"operationId": "tasks_data_create", "summary": "Method permanently attaches images or video to a task", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Data"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Data"}}}, "tags": ["tasks"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this task.", "required": true, "type": "integer"}]}, "/tasks/{id}/data/meta": {"get": {"operationId": "tasks_data_data_info", "summary": "Method provides a meta information about media files which are related with the task", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DataMeta"}}}, "tags": ["tasks"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this task.", "required": true, "type": "integer"}]}, "/tasks/{id}/dataset": {"get": {"operationId": "tasks_dataset_export", "summary": "Export task as a dataset in a specific format", "description": "", "parameters": [{"name": "format", "in": "query", "description": "Desired output format name\nYou can get the list of supported formats at:\n/server/annotation/formats", "required": true, "type": "string"}, {"name": "filename", "in": "query", "description": "Desired output file name", "required": false, "type": "string"}, {"name": "action", "in": "query", "description": "Used to start downloading process after annotation file had been created", "required": false, "type": "string", "enum": ["download"]}], "responses": {"202": {"description": "Exporting has been started"}, "201": {"description": "Output file is ready for downloading"}, "200": {"description": "Download of file started"}, "405": {"description": "Format is not available"}}, "tags": ["tasks"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this task.", "required": true, "type": "integer"}]}, "/tasks/{id}/jobs": {"get": {"operationId": "tasks_jobs", "summary": "Returns a list of jobs for a specific task", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Job"}}}}, "tags": ["tasks"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this task.", "required": true, "type": "integer"}]}, "/tasks/{id}/status": {"get": {"operationId": "tasks_status", "summary": "When task is being created the method returns information about a status of the creation process", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RqStatus"}}}, "tags": ["tasks"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this task.", "required": true, "type": "integer"}]}, "/users": {"get": {"operationId": "users_list", "summary": "Method provides a paginated list of users registered on the server", "description": "", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "id", "in": "query", "description": "A unique number value identifying this user", "type": "number"}, {"name": "is_active", "in": "query", "description": "Returns only active users", "type": "boolean"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/User"}}}}}}, "tags": ["users"]}, "parameters": []}, "/users/self": {"get": {"operationId": "users_self", "summary": "Method returns an instance of a user who is currently authorized", "description": "Method returns an instance of a user who is currently authorized", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "id", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "is_active", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/User"}}}}}}, "tags": ["users"]}, "parameters": []}, "/users/{id}": {"get": {"operationId": "users_read", "summary": "Method provides information of a specific user", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["users"]}, "patch": {"operationId": "users_partial_update", "summary": "Method updates chosen fields of a user", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["users"]}, "delete": {"operationId": "users_delete", "summary": "Method deletes a specific user from the server", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["users"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this user.", "required": true, "type": "integer"}]}}, "definitions": {"Login": {"required": ["password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string"}, "email": {"title": "Email", "type": "string", "format": "email"}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "PasswordChange": {"required": ["old_password", "new_password1", "new_password2"], "type": "object", "properties": {"old_password": {"title": "Old password", "type": "string", "maxLength": 128, "minLength": 1}, "new_password1": {"title": "New password1", "type": "string", "maxLength": 128, "minLength": 1}, "new_password2": {"title": "New password2", "type": "string", "maxLength": 128, "minLength": 1}}}, "PasswordResetSerializerEx": {"required": ["email"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}}}, "PasswordResetConfirm": {"required": ["new_password1", "new_password2", "uid", "token"], "type": "object", "properties": {"new_password1": {"title": "New password1", "type": "string", "maxLength": 128, "minLength": 1}, "new_password2": {"title": "New password2", "type": "string", "maxLength": 128, "minLength": 1}, "uid": {"title": "Uid", "type": "string", "minLength": 1}, "token": {"title": "Token", "type": "string", "minLength": 1}}}, "UserAgreement": {"required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "maxLength": 256, "minLength": 1}, "display_text": {"title": "Display text", "type": "string", "default": "", "maxLength": 2048, "minLength": 1}, "url": {"title": "Url", "type": "string", "default": "", "maxLength": 2048, "minLength": 1}, "required": {"title": "Required", "type": "boolean", "default": false}, "value": {"title": "Value", "type": "boolean", "default": false}}}, "RestrictedRegister": {"required": ["username", "password1", "password2"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "maxLength": 150, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}, "password1": {"title": "Password1", "type": "string", "minLength": 1}, "password2": {"title": "Password2", "type": "string", "minLength": 1}, "first_name": {"title": "First name", "type": "string", "minLength": 1}, "last_name": {"title": "Last name", "type": "string", "minLength": 1}, "confirmations": {"type": "array", "items": {"$ref": "#/definitions/UserAgreement"}}}}, "BasicUser": {"title": "Owner", "required": ["username"], "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "readOnly": true}, "id": {"title": "ID", "type": "integer", "readOnly": true}, "username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "first_name": {"title": "First name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150}}}, "Manifest": {"type": "object", "properties": {"filename": {"title": "Filename", "type": "string", "maxLength": 1024, "minLength": 1}}, "default": []}, "BaseCloudStorage": {"required": ["provider_type", "resource", "display_name", "credentials_type"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "owner": {"$ref": "#/definitions/BasicUser"}, "manifests": {"type": "array", "items": {"$ref": "#/definitions/Manifest"}, "default": []}, "provider_type": {"title": "Provider type", "type": "string", "enum": ["AWS_S3_BUCKET", "AZURE_CONTAINER", "GOOGLE_DRIVE", "GOOGLE_CLOUD_STORAGE"]}, "resource": {"title": "Resource", "type": "string", "maxLength": 63, "minLength": 1}, "display_name": {"title": "Display name", "type": "string", "maxLength": 63, "minLength": 1}, "created_date": {"title": "Created date", "type": "string", "format": "date-time", "readOnly": true}, "updated_date": {"title": "Updated date", "type": "string", "format": "date-time", "readOnly": true}, "credentials_type": {"title": "Credentials type", "type": "string", "enum": ["KEY_SECRET_KEY_PAIR", "ACCOUNT_NAME_TOKEN_PAIR", "KEY_FILE_PATH", "ANONYMOUS_ACCESS"]}, "specific_attributes": {"title": "Specific attributes", "type": "string", "maxLength": 50, "description": "structure like key1=value1&key2=value2\nsupported: range=aws_range"}, "description": {"title": "Description", "type": "string"}}}, "CloudStorage": {"required": ["provider_type", "resource", "display_name", "credentials_type"], "type": "object", "properties": {"provider_type": {"title": "Provider type", "type": "string", "enum": ["AWS_S3_BUCKET", "AZURE_CONTAINER", "GOOGLE_DRIVE", "GOOGLE_CLOUD_STORAGE"]}, "resource": {"title": "Resource", "type": "string", "maxLength": 63, "minLength": 1}, "display_name": {"title": "Display name", "type": "string", "maxLength": 63, "minLength": 1}, "owner": {"$ref": "#/definitions/BasicUser"}, "credentials_type": {"title": "Credentials type", "type": "string", "enum": ["KEY_SECRET_KEY_PAIR", "ACCOUNT_NAME_TOKEN_PAIR", "KEY_FILE_PATH", "ANONYMOUS_ACCESS"]}, "created_date": {"title": "Created date", "type": "string", "format": "date-time", "readOnly": true}, "updated_date": {"title": "Updated date", "type": "string", "format": "date-time", "readOnly": true}, "session_token": {"title": "Session token", "type": "string", "maxLength": 440}, "account_name": {"title": "Account name", "type": "string", "maxLength": 24}, "key": {"title": "Key", "type": "string", "maxLength": 20}, "secret_key": {"title": "Secret key", "type": "string", "maxLength": 40}, "key_file_path": {"title": "Key file path", "type": "string", "maxLength": 64}, "specific_attributes": {"title": "Specific attributes", "type": "string", "maxLength": 50, "description": "structure like key1=value1&key2=value2\nsupported: range=aws_range"}, "description": {"title": "Description", "type": "string"}, "id": {"title": "ID", "type": "integer", "readOnly": true}, "manifests": {"type": "array", "items": {"$ref": "#/definitions/Manifest"}, "default": []}}}, "Comment": {"required": ["issue"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "author": {"$ref": "#/definitions/BasicUser"}, "author_id": {"title": "Author id", "type": "integer", "x-nullable": true}, "message": {"title": "Message", "type": "string", "minLength": 1}, "created_date": {"title": "Created date", "type": "string", "format": "date-time", "readOnly": true}, "updated_date": {"title": "Updated date", "type": "string", "format": "date-time", "readOnly": true}, "issue": {"title": "Issue", "type": "integer"}}}, "Issue": {"required": ["position", "frame", "job"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "owner": {"$ref": "#/definitions/BasicUser"}, "owner_id": {"title": "Owner id", "type": "integer", "x-nullable": true}, "resolver": {"$ref": "#/definitions/BasicUser"}, "resolver_id": {"title": "Resolver id", "type": "integer", "x-nullable": true}, "position": {"type": "array", "items": {"type": "number"}}, "frame": {"title": "Frame", "type": "integer", "maximum": 2147483647, "minimum": 0}, "created_date": {"title": "Created date", "type": "string", "format": "date-time", "readOnly": true}, "resolved_date": {"title": "Resolved date", "type": "string", "format": "date-time", "x-nullable": true}, "job": {"title": "Job", "type": "integer"}, "review": {"title": "Review", "type": "integer", "x-nullable": true}}}, "Job": {"type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "readOnly": true}, "id": {"title": "ID", "type": "integer", "readOnly": true}, "assignee": {"$ref": "#/definitions/BasicUser"}, "assignee_id": {"title": "Assignee id", "type": "integer", "x-nullable": true}, "reviewer": {"$ref": "#/definitions/BasicUser"}, "reviewer_id": {"title": "Reviewer id", "type": "integer", "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["annotation", "validation", "completed"]}, "start_frame": {"title": "Start frame", "type": "string", "readOnly": true}, "stop_frame": {"title": "Stop frame", "type": "string", "readOnly": true}, "task_id": {"title": "Task id", "type": "string", "readOnly": true}}}, "AttributeVal": {"required": ["spec_id", "value"], "type": "object", "properties": {"spec_id": {"title": "Spec id", "type": "integer"}, "value": {"title": "Value", "type": "string", "maxLength": 4096}}}, "LabeledImage": {"required": ["frame", "label_id", "group", "attributes"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer", "x-nullable": true}, "frame": {"title": "Frame", "type": "integer", "minimum": 0}, "label_id": {"title": "Label id", "type": "integer", "minimum": 0}, "group": {"title": "Group", "type": "integer", "minimum": 0}, "source": {"title": "Source", "type": "string", "default": "manual", "minLength": 1}, "attributes": {"type": "array", "items": {"$ref": "#/definitions/AttributeVal"}}}}, "LabeledShape": {"required": ["type", "occluded", "points", "frame", "label_id", "group", "attributes"], "type": "object", "properties": {"type": {"title": "Type", "type": "string", "enum": ["rectangle", "polygon", "polyline", "points", "cuboid"]}, "occluded": {"title": "Occluded", "type": "boolean"}, "z_order": {"title": "Z order", "type": "integer", "default": 0}, "points": {"type": "array", "items": {"type": "number"}}, "id": {"title": "Id", "type": "integer", "x-nullable": true}, "frame": {"title": "Frame", "type": "integer", "minimum": 0}, "label_id": {"title": "Label id", "type": "integer", "minimum": 0}, "group": {"title": "Group", "type": "integer", "minimum": 0}, "source": {"title": "Source", "type": "string", "default": "manual", "minLength": 1}, "attributes": {"type": "array", "items": {"$ref": "#/definitions/AttributeVal"}}}}, "TrackedShape": {"required": ["type", "occluded", "points", "frame", "outside", "attributes"], "type": "object", "properties": {"type": {"title": "Type", "type": "string", "enum": ["rectangle", "polygon", "polyline", "points", "cuboid"]}, "occluded": {"title": "Occluded", "type": "boolean"}, "z_order": {"title": "Z order", "type": "integer", "default": 0}, "points": {"type": "array", "items": {"type": "number"}}, "id": {"title": "Id", "type": "integer", "x-nullable": true}, "frame": {"title": "Frame", "type": "integer", "minimum": 0}, "outside": {"title": "Outside", "type": "boolean"}, "attributes": {"type": "array", "items": {"$ref": "#/definitions/AttributeVal"}}}}, "LabeledTrack": {"required": ["frame", "label_id", "group", "shapes", "attributes"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer", "x-nullable": true}, "frame": {"title": "Frame", "type": "integer", "minimum": 0}, "label_id": {"title": "Label id", "type": "integer", "minimum": 0}, "group": {"title": "Group", "type": "integer", "minimum": 0}, "source": {"title": "Source", "type": "string", "default": "manual", "minLength": 1}, "shapes": {"type": "array", "items": {"$ref": "#/definitions/TrackedShape"}}, "attributes": {"type": "array", "items": {"$ref": "#/definitions/AttributeVal"}}}}, "LabeledData": {"required": ["version", "tags", "shapes", "tracks"], "type": "object", "properties": {"version": {"title": "Version", "type": "integer"}, "tags": {"type": "array", "items": {"$ref": "#/definitions/LabeledImage"}}, "shapes": {"type": "array", "items": {"$ref": "#/definitions/LabeledShape"}}, "tracks": {"type": "array", "items": {"$ref": "#/definitions/LabeledTrack"}}}}, "CombinedIssue": {"required": ["position", "comment_set", "frame", "job"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "owner": {"$ref": "#/definitions/BasicUser"}, "owner_id": {"title": "Owner id", "type": "integer", "x-nullable": true}, "resolver": {"$ref": "#/definitions/BasicUser"}, "resolver_id": {"title": "Resolver id", "type": "integer", "x-nullable": true}, "position": {"type": "array", "items": {"type": "number"}}, "comment_set": {"type": "array", "items": {"$ref": "#/definitions/Comment"}}, "frame": {"title": "Frame", "type": "integer", "maximum": 2147483647, "minimum": 0}, "created_date": {"title": "Created date", "type": "string", "format": "date-time", "readOnly": true}, "resolved_date": {"title": "Resolved date", "type": "string", "format": "date-time", "x-nullable": true}, "job": {"title": "Job", "type": "integer"}, "review": {"title": "Review", "type": "integer", "x-nullable": true}}}, "Review": {"required": ["estimated_quality", "status", "job"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "assignee": {"$ref": "#/definitions/BasicUser"}, "assignee_id": {"title": "Assignee id", "type": "integer", "x-nullable": true}, "reviewer": {"$ref": "#/definitions/BasicUser"}, "reviewer_id": {"title": "Reviewer id", "type": "integer", "x-nullable": true}, "estimated_quality": {"title": "Estimated quality", "type": "number"}, "status": {"title": "Status", "type": "string", "enum": ["accepted", "rejected", "review_further"]}, "job": {"title": "Job", "type": "integer"}}}, "Attribute": {"required": ["name", "mutable", "input_type", "default_value", "values"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 64, "minLength": 1}, "mutable": {"title": "Mutable", "type": "boolean"}, "input_type": {"title": "Input type", "type": "string", "enum": ["checkbox", "radio", "number", "text", "select"]}, "default_value": {"title": "Default value", "type": "string", "maxLength": 128, "minLength": 1}, "values": {"title": "Values", "type": "string", "maxLength": 4096, "minLength": 1}}, "default": []}, "Label": {"required": ["name"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "name": {"title": "Name", "type": "string", "maxLength": 64, "minLength": 1}, "color": {"title": "Color", "type": "string"}, "attributes": {"type": "array", "items": {"$ref": "#/definitions/Attribute"}, "default": []}, "deleted": {"title": "Deleted", "description": "Delete label if value is true from proper Task/Project object", "type": "boolean"}}}, "SimpleJob": {"required": [], "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "readOnly": true}, "id": {"title": "ID", "type": "integer", "readOnly": true}, "assignee": {"$ref": "#/definitions/BasicUser"}, "assignee_id": {"title": "Assignee id", "type": "integer"}, "reviewer": {"$ref": "#/definitions/BasicUser"}, "reviewer_id": {"title": "Reviewer id", "type": "integer", "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["annotation", "validation", "completed"]}}}, "Segment": {"required": ["start_frame", "stop_frame", "jobs"], "type": "object", "properties": {"start_frame": {"title": "Start frame", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "stop_frame": {"title": "Stop frame", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "jobs": {"type": "array", "items": {"$ref": "#/definitions/SimpleJob"}}}}, "Task": {"required": ["name"], "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "readOnly": true}, "id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 256, "minLength": 1}, "project_id": {"title": "Project id", "type": "integer"}, "mode": {"title": "Mode", "type": "string", "readOnly": true, "minLength": 1}, "owner": {"$ref": "#/definitions/BasicUser"}, "assignee": {"$ref": "#/definitions/BasicUser"}, "owner_id": {"title": "Owner id", "type": "integer", "x-nullable": true}, "assignee_id": {"title": "Assignee id", "type": "integer", "x-nullable": true}, "bug_tracker": {"title": "Bug tracker", "type": "string", "maxLength": 2000}, "created_date": {"title": "Created date", "type": "string", "format": "date-time", "readOnly": true}, "updated_date": {"title": "Updated date", "type": "string", "format": "date-time", "readOnly": true}, "overlap": {"title": "Overlap", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}, "segment_size": {"title": "Segment size", "type": "integer", "maximum": 2147483647, "minimum": 0}, "status": {"title": "Status", "type": "string", "enum": ["annotation", "validation", "completed"], "readOnly": true}, "labels": {"type": "array", "items": {"$ref": "#/definitions/Label"}}, "segments": {"type": "array", "items": {"$ref": "#/definitions/Segment"}, "readOnly": true}, "data_chunk_size": {"title": "Data chunk size", "type": "string", "readOnly": true}, "data_compressed_chunk_type": {"title": "Data compressed chunk type", "type": "string", "readOnly": true}, "data_original_chunk_type": {"title": "Data original chunk type", "type": "string", "readOnly": true}, "size": {"title": "Size", "type": "string", "readOnly": true}, "image_quality": {"title": "Image quality", "type": "string", "readOnly": true}, "data": {"title": "Data", "type": "string", "readOnly": true}, "dimension": {"title": "Dimension", "type": "string"}, "subset": {"title": "Subset", "type": "string", "maxLength": 64}}}, "TrainingProject": {"title": "Training project", "required": ["host", "username", "password"], "type": "object", "properties": {"host": {"title": "Host", "type": "string", "maxLength": 256, "minLength": 1}, "username": {"title": "Username", "type": "string", "maxLength": 256, "minLength": 1}, "password": {"title": "Password", "type": "string", "maxLength": 256, "minLength": 1}, "enabled": {"title": "Enabled", "type": "boolean", "x-nullable": true}, "project_class": {"title": "Project class", "type": "string", "enum": ["OD"], "x-nullable": true}}}, "Project": {"required": ["name"], "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "readOnly": true}, "id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 256, "minLength": 1}, "labels": {"type": "array", "items": {"$ref": "#/definitions/Label"}, "default": []}, "tasks": {"type": "array", "items": {"$ref": "#/definitions/Task"}, "readOnly": true}, "owner": {"$ref": "#/definitions/BasicUser"}, "assignee": {"$ref": "#/definitions/BasicUser"}, "owner_id": {"title": "Owner id", "type": "integer", "x-nullable": true}, "assignee_id": {"title": "Assignee id", "type": "integer", "x-nullable": true}, "bug_tracker": {"title": "Bug tracker", "type": "string", "maxLength": 2000}, "task_subsets": {"type": "array", "items": {"type": "string", "minLength": 1}}, "created_date": {"title": "Created date", "type": "string", "format": "date-time", "readOnly": true}, "updated_date": {"title": "Updated date", "type": "string", "format": "date-time", "readOnly": true}, "status": {"title": "Status", "type": "string", "enum": ["annotation", "validation", "completed"], "readOnly": true}, "training_project": {"$ref": "#/definitions/TrainingProject"}, "dimension": {"title": "Dimension", "type": "string", "maxLength": 16, "minLength": 1}}}, "CombinedReview": {"required": ["issue_set", "estimated_quality", "status", "job"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "assignee": {"$ref": "#/definitions/BasicUser"}, "assignee_id": {"title": "Assignee id", "type": "integer", "x-nullable": true}, "reviewer": {"$ref": "#/definitions/BasicUser"}, "reviewer_id": {"title": "Reviewer id", "type": "integer", "x-nullable": true}, "issue_set": {"type": "array", "items": {"$ref": "#/definitions/CombinedIssue"}}, "estimated_quality": {"title": "Estimated quality", "type": "number"}, "status": {"title": "Status", "type": "string", "enum": ["accepted", "rejected", "review_further"]}, "job": {"title": "Job", "type": "integer"}}}, "About": {"required": ["name", "description", "version"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "maxLength": 128, "minLength": 1}, "description": {"title": "Description", "type": "string", "maxLength": 2048, "minLength": 1}, "version": {"title": "Version", "type": "string", "maxLength": 64, "minLength": 1}}}, "DatasetFormat": {"required": ["name", "ext", "version", "enabled", "dimension"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "maxLength": 64, "minLength": 1}, "ext": {"title": "Ext", "type": "string", "maxLength": 64, "minLength": 1}, "version": {"title": "Version", "type": "string", "maxLength": 64, "minLength": 1}, "enabled": {"title": "Enabled", "type": "boolean"}, "dimension": {"title": "Dimension", "type": "string", "maxLength": 2, "minLength": 1}}}, "DatasetFormats": {"required": ["importers", "exporters"], "type": "object", "properties": {"importers": {"type": "array", "items": {"$ref": "#/definitions/DatasetFormat"}}, "exporters": {"type": "array", "items": {"$ref": "#/definitions/DatasetFormat"}}}}, "Exception": {"required": ["system", "client", "time", "client_id", "message", "filename", "line", "column", "stack"], "type": "object", "properties": {"system": {"title": "System", "type": "string", "maxLength": 255, "minLength": 1}, "client": {"title": "Client", "type": "string", "maxLength": 255, "minLength": 1}, "time": {"title": "Time", "type": "string", "format": "date-time"}, "job_id": {"title": "Job id", "type": "integer"}, "task_id": {"title": "Task id", "type": "integer"}, "proj_id": {"title": "Proj id", "type": "integer"}, "client_id": {"title": "Client id", "type": "integer"}, "message": {"title": "Message", "type": "string", "maxLength": 4096, "minLength": 1}, "filename": {"title": "Filename", "type": "string", "format": "uri", "minLength": 1}, "line": {"title": "Line", "type": "integer"}, "column": {"title": "Column", "type": "integer"}, "stack": {"title": "Stack", "type": "string", "maxLength": 8192}}}, "LogEvent": {"required": ["client_id", "name", "time", "is_active"], "type": "object", "properties": {"job_id": {"title": "Job id", "type": "integer"}, "task_id": {"title": "Task id", "type": "integer"}, "proj_id": {"title": "Proj id", "type": "integer"}, "client_id": {"title": "Client id", "type": "integer"}, "name": {"title": "Name", "type": "string", "maxLength": 64, "minLength": 1}, "time": {"title": "Time", "type": "string", "format": "date-time"}, "message": {"title": "Message", "type": "string", "maxLength": 4096, "minLength": 1}, "payload": {"title": "Payload", "type": "object", "additionalProperties": {"type": "string"}}, "is_active": {"title": "Is active", "type": "boolean"}}}, "Plugins": {"required": ["GIT_INTEGRATION", "ANALYTICS", "MODELS", "PREDICT"], "type": "object", "properties": {"GIT_INTEGRATION": {"title": "Git integration", "type": "boolean"}, "ANALYTICS": {"title": "Analytics", "type": "boolean"}, "MODELS": {"title": "Models", "type": "boolean"}, "PREDICT": {"title": "Predict", "type": "boolean"}}}, "FileInfo": {"required": ["name", "type"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "maxLength": 1024, "minLength": 1}, "type": {"title": "Type", "type": "string", "enum": ["REG", "DIR"]}}}, "ClientFile": {"type": "object", "properties": {"file": {"title": "File", "type": "string", "readOnly": true, "format": "uri"}}, "default": []}, "ServerFile": {"required": ["file"], "type": "object", "properties": {"file": {"title": "File", "type": "string", "maxLength": 1024, "minLength": 1}}, "default": []}, "RemoteFile": {"required": ["file"], "type": "object", "properties": {"file": {"title": "File", "type": "string", "maxLength": 1024, "minLength": 1}}, "default": []}, "Data": {"required": ["image_quality"], "type": "object", "properties": {"chunk_size": {"title": "Chunk size", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}, "size": {"title": "Size", "type": "integer", "maximum": 2147483647, "minimum": 0}, "image_quality": {"title": "Image quality", "type": "integer", "maximum": 100, "minimum": 0}, "start_frame": {"title": "Start frame", "type": "integer", "maximum": 2147483647, "minimum": 0}, "stop_frame": {"title": "Stop frame", "type": "integer", "maximum": 2147483647, "minimum": 0}, "frame_filter": {"title": "Frame filter", "type": "string", "maxLength": 256}, "compressed_chunk_type": {"title": "Compressed chunk type", "type": "string", "enum": ["video", "imageset", "list"]}, "original_chunk_type": {"title": "Original chunk type", "type": "string", "enum": ["video", "imageset", "list"]}, "client_files": {"type": "array", "items": {"$ref": "#/definitions/ClientFile"}, "default": []}, "server_files": {"type": "array", "items": {"$ref": "#/definitions/ServerFile"}, "default": []}, "remote_files": {"type": "array", "items": {"$ref": "#/definitions/RemoteFile"}, "default": []}, "use_zip_chunks": {"title": "Use zip chunks", "type": "boolean", "default": false}, "cloud_storage_id": {"title": "Cloud storage id", "type": "integer", "x-nullable": true}, "use_cache": {"title": "Use cache", "type": "boolean", "default": false}, "copy_data": {"title": "Copy data", "type": "boolean", "default": false}, "storage_method": {"title": "Storage method", "type": "string", "enum": ["cache", "file_system"]}, "storage": {"title": "Storage", "type": "string", "enum": ["cloud_storage", "local", "share"]}}}, "FrameMeta": {"required": ["width", "height", "name", "has_related_context"], "type": "object", "properties": {"width": {"title": "Width", "type": "integer"}, "height": {"title": "Height", "type": "integer"}, "name": {"title": "Name", "type": "string", "maxLength": 1024, "minLength": 1}, "has_related_context": {"title": "Has related context", "type": "boolean"}}}, "DataMeta": {"required": ["image_quality", "frames"], "type": "object", "properties": {"chunk_size": {"title": "Chunk size", "type": "integer", "readOnly": true}, "size": {"title": "Size", "type": "integer", "readOnly": true}, "image_quality": {"title": "Image quality", "type": "integer", "maximum": 100, "minimum": 0}, "start_frame": {"title": "Start frame", "type": "integer", "readOnly": true}, "stop_frame": {"title": "Stop frame", "type": "integer", "readOnly": true}, "frame_filter": {"title": "Frame filter", "type": "string", "readOnly": true, "minLength": 1}, "frames": {"type": "array", "items": {"$ref": "#/definitions/FrameMeta"}}}}, "RqStatus": {"required": ["state"], "type": "object", "properties": {"state": {"title": "State", "type": "string", "enum": ["Queued", "Started", "Finished", "Failed"]}, "message": {"title": "Message", "type": "string", "default": ""}}}, "User": {"required": ["username", "groups"], "type": "object", "properties": {"url": {"title": "Url", "type": "string", "format": "uri", "readOnly": true}, "id": {"title": "ID", "type": "integer", "readOnly": true}, "username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "first_name": {"title": "First name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150}, "email": {"title": "Email address", "type": "string", "format": "email", "maxLength": 254}, "groups": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}, "is_staff": {"title": "Staff status", "description": "Designates whether the user can log into this admin site.", "type": "boolean"}, "is_superuser": {"title": "Superuser status", "description": "Designates that this user has all permissions without explicitly assigning them.", "type": "boolean"}, "is_active": {"title": "Active", "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.", "type": "boolean"}, "last_login": {"title": "Last login", "type": "string", "format": "date-time", "readOnly": true}, "date_joined": {"title": "Date joined", "type": "string", "format": "date-time", "readOnly": true}}}}}
